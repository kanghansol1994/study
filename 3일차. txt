분량이 계속 늘어나므로 계속 공부해야함
7월쯤 지정논문3~4개 선택논문 3~4개 구현 과제
팀프로젝트 시 보통 4인이 한조 발표는 매주 한명씩 모두 발표함(논문 하나를 4명에서 나눠서 발표)
단순 머닝러신은 줄1개 긋는것이 끝 y=wx+b
bias=통상 디폴트값이 0
weight 값은 최적의weight 나올때까지 계속 수정해가며 갱신
고양이가 생선을 보는순간 데이터 값이 input 침이 나오는 순간 output
중간 hidden layer 나중에 2epochs만큼 손으로 계산 시킬것임 a4용지2장정도 나올듯
제곱:mse 절대값:mae 으로 loss를 판단 
열=컬럼=특성=피처
행무시 열우선
dim의 갯수가 열의 갯수와 동일
input layer=x output layer= y와 같다 (x가 (10,2))(y가 (10,))일 경우 
model = Sequential()
model.add(Dense(3, input_dim=2))
model.add(Dense(10))
model.add(Dense(20))
model.add(Dense(1))
input_dim이 x의 2 마지막Dense가 y의1
평가(predict)는 model.fit에서 생성된 weight값으로 평가를 진행

batch_size가 3일때 
Epoch 30/30
4/4 [==============================] - 0s 1ms/step - loss: 15.8609

batch_size가 2일때
Epoch 30/30
5/5 [==============================] - 0s 998us/step - loss: 21.2309
4/4 5/5는 x의 갯수가 10개이므로 batch_size 3으로 나눴을땐 4번에 나눠 훈련
batch_size 2로 나눴을땐 5번에 나눠 훈련 한다는 것을 의미

x = np.array(
   [[1,2,3,4,5,6,7,8,9,10],
    [1,1,1,1,2,1.3,1.4,1.5,1.6,1.4]]
)
y = np.array([11, 12, 13, 14, 15, 16, 17, 18 , 19, 20])
일경우 x와 y의 size가 동일하지 않으므로 에러

'''와 """를 이용하여 블럭주석처리 가능 (keras07_mlp2.py 참고)
x= x.transpose()
x = x.T
2가지 방법(13번과14번)으로  (3,10)행렬이 (10,3)인 행렬로 전치된다
어느 방법을 쓸 지는 자신이 편한것으로 이용 (keras07_mlp.3에서 실행해보기)

x=np.array(range(10))
사용시 0~9까지 포함 [0 1 2 3 4 5 6 7 8 9]

range(21,31)
사용시 21~30까지 포함 (뒷숫자에서 -1을 하면 포함하는 범위)
range(201, 211)
그러므로 이 경우 201~210까지 포함
keras07_mlp4,keras07_mlp5,keras07_mlp6 keras07_mlp7 오차 적을때까지 실행해보기

통상적으로 y가 x보다 많은 경우는 없다 1개의 특성으로 3가지를 유추하는것보다
3개의 특성으로 1가지 유추하는게 쉽다
pyton에서 마지막에 콤마(,)를 찍는다고 하여 문제는 없다
ex)y=np.array([10,9,8,7,6,5,4,3,2,1,]) [10  9  8  7  6  5  4  3  2  1]
제대로 나옴

앞에서 70%  뒤에서 30%로 딱 끊을 경우 범위 밖의 값을 예측하기가 어려움
